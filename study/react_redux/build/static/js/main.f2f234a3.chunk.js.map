{"version":3,"sources":["redux/constant.js","redux/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/actions/person.js","App.jsx","redux/reducers/person.js","redux/reducers/index.js","redux/reducers/count.js","redux/store.js","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","increment","data","type","Count","value","selectNumber","props","decrement","incrementIfOdd","count","incrementAsync","this","persons","ref","c","onClick","Component","connect","state","length","time","dispatch","setTimeout","Person","addPerson","name","nameNode","age","ageNode","personObj","id","nanoid","addOnePerson","placeholder","map","p","App","initState","combineReducers","preState","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.f2f234a3.chunk.js","sourcesContent":["/* \r\n    该模块是用于定义action对象中type类型的常量值，便于管理的同时，防止程序员单词写错\r\n*/\r\n\r\nexport const INCREMENT = 'increment'\r\nexport const DECREMENT = 'decrement'\r\nexport const ADD_PERSON = 'add_person'","/* \r\n    该文件专门为Count组件生成action对象\r\n*/\r\nimport {INCREMENT,DECREMENT} from '../constant'\r\nexport const increment = data => ({type:INCREMENT,data})\r\nexport const decrement = data => ({type:DECREMENT,data})\r\n\r\n//异步action，就是指action的值为函数\r\nexport const incrementAsync = (data,time) => {\r\n    return (dispatch) => {\r\n        setTimeout(()=>{\r\n            dispatch(increment(data))\r\n        },time)\r\n    }\r\n}\r\n\r\n\r\n","\r\n//引入action\r\nimport { increment,decrement,incrementAsync} from '../../redux/actions/count'\r\n//引入connect用于连接UI组件与redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport React, { Component } from 'react'\r\n//引入actionCreator,专门用于创建action对象\r\nclass Count extends Component {\r\n    \r\n    increment = () => {\r\n        const { value } = this.selectNumber;\r\n        this.props.increment(value*1)\r\n    }\r\n    decrement = () => {\r\n        const { value } = this.selectNumber;\r\n        this.props.decrement(value*1)\r\n    }\r\n    //奇数再加\r\n    incrementIfOdd = () => {\r\n        const { value } = this.selectNumber;\r\n        \r\n        if (this.props.count % 2 !== 0) {\r\n            this.props.increment(value*1)\r\n        }\r\n    }\r\n    incrementAsync = () => {\r\n        const { value } = this.selectNumber;\r\n        this.props.incrementAsync(value*1,500)\r\n    }\r\n    render() {\r\n        // console.log('props',this.props);\r\n        return (\r\n            <div>\r\n                <h2>我是Count组件，下方组件人数为{this.props.persons}</h2>\r\n                <h4>当前求和为：{this.props.count}</h4>&nbsp;\r\n                <select ref={c => this.selectNumber = c}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>&nbsp;\r\n                <button onClick={this.increment}>加</button>\r\n                <button onClick={this.decrement}>减</button>\r\n                <button onClick={this.incrementIfOdd}>和为奇数加</button>\r\n                <button onClick={this.incrementAsync}>异步加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n//使用connect()()创建并暴露一个Count的容器组件\r\nexport default connect(\r\n    //mapStateToProps简写\r\n    state => ({count: state.count, persons:state.persons.length}), \r\n    \r\n    {\r\n        increment,\r\n        decrement,\r\n        incrementAsync,\r\n    }\r\n)(Count)","import React, { Component } from 'react'\r\nimport {nanoid} from 'nanoid'\r\nimport { connect } from 'react-redux'\r\nimport {addPerson} from '../../redux/actions/person'\r\nclass Person extends Component {\r\n    addPerson = () => {\r\n        const name = this.nameNode.value;\r\n        const age = this.ageNode.value;\r\n        const personObj = {id:nanoid(),name,age}\r\n        this.props.addOnePerson(personObj)\r\n        this.nameNode.value = '';\r\n        this.ageNode.value = '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>我是Person组件，上方组件求和为{this.props.count}</h1>\r\n                <input ref={c =>this.nameNode = c} placeholder=\"请输入名字\" type=\"text\" />\r\n                <input ref={c =>this.ageNode = c} placeholder=\"请输入年龄\" type=\"number\" />\r\n                <button onClick={this.addPerson}>添加</button>\r\n                <ul>\r\n                    {\r\n                        this.props.persons.map(p => {\r\n                            return <li key={p.id}>{p.name}--{p.age}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({persons:state.persons, count:state.count}),\r\n    {addOnePerson:addPerson}\r\n)(Person)\r\n","\r\nimport {ADD_PERSON} from '../constant'\r\n\r\nexport const addPerson = (data) => ({type:ADD_PERSON,data})","import React, {Component} from 'react'\r\nimport Count from './containers/Count'//引入容器组件\r\nimport Person from './containers/Person'\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                {/* 给容器组件传递store */}\r\n                <Count />\r\n                <hr />\r\n                <Person/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport {ADD_PERSON} from '../constant'\r\n//初始化\r\nconst initState = [{id:'001',name:'tom',age:29}]\r\nexport default function personReducer(preState = initState,action) {\r\n    const {type,data} = action\r\n    switch (type){\r\n        case ADD_PERSON:\r\n            // preState.unshift(data) //preState被改写，personReducer不是纯函数了，\r\n            // return preState //修改前后preState都是同一个地址，页面不会更新\r\n            return [data,...preState]\r\n        default:\r\n            return preState;\r\n    }\r\n}","/* \r\n    该文件用于汇总所有的reducer\r\n*/\r\nimport { combineReducers } from \"redux\";\r\n\r\n\r\n// countReducer\r\nimport count from './count'\r\n\r\n//导入personReducer\r\nimport persons from './person'\r\n\r\nexport default combineReducers({\r\n    count,\r\n    persons\r\n})","/* \r\n    1.reducer本质是一个函数\r\n    2.reducer接收两个参数，分别为：之前的状态（preState），动作对象（action)\r\n\r\n*/\r\n\r\nimport {INCREMENT,DECREMENT} from '../constant'\r\n\r\n//preState=0初始化默认值\r\nexport default function countReducer(preState = 10, action) {\r\n    // console.log(preState);\r\n    //从action身上获取type、data\r\n    const {type, data} = action\r\n    switch(type){\r\n        case INCREMENT:\r\n            return preState + data\r\n        case DECREMENT:\r\n            return preState - data\r\n            \r\n        default:\r\n            return preState\r\n    }\r\n}","\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\n//引入redux-thunk，用于支持异步action\r\nimport thunk from 'redux-thunk'\r\n//导入合并后reducer\r\nimport reducer from './reducers'\r\n//引入redux-devtools-extension\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n//通过reducer创建store\r\nexport default createStore(reducer,composeWithDevTools(applyMiddleware(thunk)) )","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nReactDOM.render(\r\n    //Provider可以自动给所有容器组件传递store\r\n    <Provider store={store}><App /></Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}